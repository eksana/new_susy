/*@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}*/
/*p {
  @include font-size(13);
} */

/*Медиа-запросы
$breakpoints: (
  "phone":        400px,
  "phone-wide":   480px,
  "phablet":      560px,
  "tablet-small": 640px,
  "tablet":       768px,
  "tablet-wide":  1024px,
  "desktop":      1248px,
  "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
   $width: map_get($breakpoints, $width);
   @if $type == max {
    $width: $width - 1px;
   }
   @media only screen and (#/*{$type}*//*-width: $width) {
    @content;
   }
  }
}

Используем
.site-header {
  padding: 2rem;
  font-size: 1.8rem;
  @include mq('tablet-wide') {
   padding-top: 4rem;
   font-size: 2.4rem;
  }
}*/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
/*
Использовать можно так:

p {
  @include font-size(14px)
}
На выходе получим:

p {
  font-size: 14px; //перезапишется если браузер поддерживает размерность в rem
  font-size: 0.8rem;
}
*/